name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  push:
    branches:
      - "master"
      - "main"
  pull_request:
    branches:
      - "master"
      - "main"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.9]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test

    - name: Check conda environment
      shell: bash -l {0}
      run: conda list

    - name: Testing Dependencies
      shell: bash -l {0}
      run: |
        python -m pip install -U pytest pytest-cov codecov

    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install .

    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=pylisk --cov-report=xml --color=yes pylisk/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

    - name: Create transaction example
      shell: bash -l {0}
      run: python pylisk/create_transaction.py

  formatting:
    name: Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install format dependencies
        run: python -m pip install black
      - name: Run black
        run: |
          black -l 99 --check pylisk/